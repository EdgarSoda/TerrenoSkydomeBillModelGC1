////////////////////////////////////////////////////////////////////////////////
// Filename: light.ps
////////////////////////////////////////////////////////////////////////////////
#version 400


/////////////////////
// INPUT VARIABLES //
/////////////////////
in vec2 texCoord;

//////////////////////
// OUTPUT VARIABLES //
//////////////////////
out vec4 outputColor;


///////////////////////
// UNIFORM VARIABLES //
///////////////////////
uniform sampler2D mibillboard;
uniform vec3 lightDirection;
uniform vec4 diffuseLightColor;

//Aqui se reciben factores uno y facotres dos:
uniform vec4 diffuseLightColor1;
uniform vec4 diffuseLightColor2;
uniform vec3 datos;

uniform vec4 factores1;
uniform vec4 factores2;




////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
void main(void)
{
	vec4 textureColor;
	vec3 NewNormal;
	vec3 normalaza;
	vec3 lightDir;
	float lightIntensity;
	
	//Hacemos un mix:
	vec4 factores = mix(factores2, factores1, datos.x);
	float FAA = factores.x;
	float FAD = factores.y;
	float FAS = factores.z;

	//vec4 t1 = texture(shaderTexture, texCoord);
	//vec4 t2 = texture(shaderTexture2, texCoord);
	//vec4 t3 = texture(shaderTexture4, texCoord);
	//vec4 mt = texture(mexcla,texCoord/40.0);


	// Obtener la textura difusa o de color
	textureColor = texture(mibillboard, texCoord);	
	if (textureColor.a < 0.1)
		discard;
	else

	
	// Calcula el monto de luz segun el vector de luz y la normal de la textura.
	lightIntensity = FAD * clamp(dot(NewNormal, lightDir), 0.0f, 1.0f);

	//////////////////////////////////
	//THIS IS CHANGE HORARIO:

	vec4 nuevotono = mix(diffuseLightColor2, diffuseLightColor1, datos.x);


	// Determine el monto de luz de color segun la resultante con la normal.


	outputColor =  clamp((nuevotono * lightIntensity), 0.0f, 1.0f);

	//THIS IS CHANGE HORARIO:
	///////////////////////////////////
	//AHORA ES ASI:
	// Multiplica la textura color final.
	outputColor = textureColor * (FAA + lightIntensity );





		//outputColor = textureColor;
}